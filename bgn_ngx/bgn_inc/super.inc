/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@163.com
* QQ: 2796796
*
*******************************************************************************/
#ifndef _SUPER_INC
#define _SUPER_INC

#include "findex.inc"

FUNC_ADDR_NODE g_super_func_addr_list[ ] = {
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_print_module_status,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_print_module_status",
/*func index      */    FI_super_print_module_status,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */    0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_free_module_static_mem,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_free_module_static_mem",
/*func index      */    FI_super_free_module_static_mem,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_start,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_start",
/*func index      */    FI_super_start,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    0,
/*func para direct*/    {E_DIRECT_END,},
/*func para type  */    {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_end,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_end",
/*func index      */    FI_super_end,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_sync_taskc_mgr,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_sync_taskc_mgr",
/*func index      */    FI_super_sync_taskc_mgr,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT},
/*func para type  */    {e_dbg_UINT32,e_dbg_TASKC_MGR_ptr},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_check_tcid_connected,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_check_tcid_connected",
/*func index      */    FI_super_check_tcid_connected,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_mem,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_mem",
/*func index      */    FI_super_show_mem,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN, E_DIRECT_IO, },
/*func para type  */    {e_dbg_UINT32, e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_show_mem_of_type,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_show_mem_of_type",
/*func index      */     FI_super_show_mem_of_type,
/*func ret type   */     e_dbg_void,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_diag_mem,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_diag_mem",
/*func index      */    FI_super_diag_mem,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN, E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32, e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_diag_mem_of_type,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_diag_mem_of_type",
/*func index      */     FI_super_diag_mem_of_type,
/*func ret type   */     e_dbg_void,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_clean_mem,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_clean_mem",
/*func index      */    FI_super_clean_mem,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_shutdown_taskcomm,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_shutdown_taskcomm",
/*func index      */    FI_super_shutdown_taskcomm,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_sync_cload_stat,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_sync_cload_stat",
/*func index      */    FI_super_sync_cload_stat,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_CLOAD_STAT_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_sync_taskcomm,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_sync_taskcomm",
/*func index      */    FI_super_sync_taskcomm,
/*func ret type   */    e_dbg_void,
/*func para num   */    8,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CVECTOR_ptr},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_sync_taskcomm_from_local,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_sync_taskcomm_from_local",
/*func index      */    FI_super_sync_taskcomm_from_local,
/*func ret type   */    e_dbg_void,
/*func para num   */    5,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CVECTOR_ptr},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_ping_taskcomm,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_ping_taskcomm",
/*func index      */    FI_super_ping_taskcomm,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_queues,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_queues",
/*func index      */    FI_super_show_queues,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_handle_broken_tcid_comm,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_handle_broken_tcid_comm",
/*func index      */    FI_super_handle_broken_tcid_comm,
/*func ret type   */    e_dbg_void,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_notify_broken_tcid_comm,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_notify_broken_tcid_comm",
/*func index      */    FI_super_notify_broken_tcid_comm,
/*func ret type   */    e_dbg_void,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_notify_broken_route,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_notify_broken_route",
/*func index      */    FI_super_notify_broken_route,
/*func ret type   */    e_dbg_void,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_thread_num,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_thread_num",
/*func index      */    FI_super_show_thread_num,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_route_table,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_route_table",
/*func index      */    FI_super_show_route_table,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_rank_node,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_rank_node",
/*func index      */    FI_super_show_rank_node,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_switch_rank_node_green,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_switch_rank_node_green",
/*func index      */    FI_super_switch_rank_node_green,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_switch_rank_node_red,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_switch_rank_node_red",
/*func index      */    FI_super_switch_rank_node_red,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_work_client,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_work_client",
/*func index      */    FI_super_show_work_client,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_cstring,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_cstring",
/*func index      */    FI_super_show_cstring,
/*func ret type   */    e_dbg_void,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_switch_log_off,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_switch_log_off",
/*func index      */    FI_super_switch_log_off,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_switch_log_on,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_switch_log_on",
/*func index      */    FI_super_switch_log_on,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_wait_me_ready,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_wait_me_ready",
/*func index      */    FI_super_wait_me_ready,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_add_route,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_add_route",
/*func index      */    FI_super_add_route,
/*func ret type   */    e_dbg_void,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_del_route,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_del_route",
/*func index      */    FI_super_del_route,
/*func ret type   */    e_dbg_void,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_add_connection,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_add_connection",
/*func index      */     FI_super_add_connection,
/*func ret type   */     e_dbg_void,
/*func para num   */     6,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_run_shell,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_run_shell",
/*func index      */    FI_super_run_shell,
/*func ret type   */    e_dbg_void,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_rank_load,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_rank_load",
/*func index      */    FI_super_show_rank_load,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_sync_rank_load,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_sync_rank_load",
/*func index      */     FI_super_sync_rank_load,
/*func ret type   */     e_dbg_void,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_rank_load,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_rank_load",
/*func index      */     FI_super_set_rank_load,
/*func ret type   */     e_dbg_void,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CLOAD_STAT_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_enable_task_brd,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_enable_task_brd",
/*func index      */     FI_super_enable_task_brd,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_disable_task_brd,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_disable_task_brd",
/*func index      */     FI_super_disable_task_brd,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_heartbeat_on_node,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_heartbeat_on_node",
/*func index      */     FI_super_heartbeat_on_node,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CLOAD_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_heartbeat_on_rank,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_heartbeat_on_rank",
/*func index      */     FI_super_heartbeat_on_rank,
/*func ret type   */     e_dbg_void,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CLOAD_STAT_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_heartbeat_all,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_heartbeat_all",
/*func index      */     FI_super_heartbeat_all,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CLOAD_MGR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_heartbeat_none,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_heartbeat_none",
/*func index      */     FI_super_heartbeat_none,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_show_version,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_show_version",
/*func index      */     FI_super_show_version,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_show_vendor,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_show_vendor",
/*func index      */     FI_super_show_vendor,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_wordsize,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_wordsize",
/*func index      */     FI_super_get_wordsize,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_show_wordsize,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_show_wordsize",
/*func index      */     FI_super_show_wordsize,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_sync_cload_mgr,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_sync_cload_mgr",
/*func index      */    FI_super_sync_cload_mgr,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT},
/*func para type  */    {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CLOAD_MGR_ptr},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_download(const UINT32 super_md_id, const CSTRING *fname, CBYTES *cbytes); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_download,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_download",
/*func index      */     FI_super_download,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_upload(const UINT32 super_md_id, const CSTRING *fname, const CBYTES *cbytes, const UINT32 backup_flag); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_upload,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_upload",
/*func index      */     FI_super_upload,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_exec_shell,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_exec_shell",
/*func index      */    FI_super_exec_shell,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT },
/*func para type  */    {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_sync_cload_node,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_sync_cload_node",
/*func index      */    FI_super_sync_cload_node,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */    {e_dbg_UINT32,e_dbg_CLOAD_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_activate_sys_cfg,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_activate_sys_cfg",
/*func index      */    FI_super_activate_sys_cfg,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_show_sys_cfg,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_show_sys_cfg",
/*func index      */     FI_super_show_sys_cfg,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_vec,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_vec",
/*func index      */     FI_super_exec_shell_vec,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CVECTOR_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_vec_tcid_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_vec_tcid_cstr",
/*func index      */     FI_super_exec_shell_vec_tcid_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_download_vec_tcid_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_download_vec_tcid_cstr",
/*func index      */     FI_super_download_vec_tcid_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_upload_vec_tcid_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_upload_vec_tcid_cstr",
/*func index      */     FI_super_upload_vec_tcid_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     6,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_UINT32,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_exec_shell_tcid_cstr,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_exec_shell_tcid_cstr",
/*func index      */    FI_super_exec_shell_tcid_cstr,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT },
/*func para type  */    {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_download_tcid_cstr,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_download_tcid_cstr",
/*func index      */    FI_super_download_tcid_cstr,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT },
/*func para type  */    {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_upload_tcid_cstr,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_upload_tcid_cstr",
/*func index      */    FI_super_upload_tcid_cstr,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    5,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_check_ipaddr_connected,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_check_ipaddr_connected",
/*func index      */    FI_super_check_ipaddr_connected,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, const CSTRING *cmd_line, CBYTES *output_cbytes); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_ipaddr_cstr",
/*func index      */     FI_super_exec_shell_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_vec_ipaddr_cstr(const UINT32 super_md_id, const CVECTOR *ipaddr_cstr_vec, const CSTRING *cmd_line, CVECTOR *output_cbytes_vec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_vec_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_vec_ipaddr_cstr",
/*func index      */     FI_super_exec_shell_vec_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_download_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, const CSTRING *fname, CBYTES *output_cbytes); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_download_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_download_ipaddr_cstr",
/*func index      */     FI_super_download_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_download_vec_ipaddr_cstr(const UINT32 super_md_id, const CVECTOR *ipaddr_cstr_vec, const CSTRING *fname, CVECTOR *output_cbytes_vec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_download_vec_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_download_vec_ipaddr_cstr",
/*func index      */     FI_super_download_vec_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_upload_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, const CSTRING *fname, const CBYTES *output_cbytes, const UINT32 backup_flag) -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_upload_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_upload_ipaddr_cstr",
/*func index      */     FI_super_upload_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_upload_vec_ipaddr_cstr(const UINT32 super_md_id, const CVECTOR *ipaddr_cstr_vec, const CSTRING *fname, const CBYTES *input_cbytes, const UINT32 backup_flag, CVECTOR *ret_vec) -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_upload_vec_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_upload_vec_ipaddr_cstr",
/*func index      */     FI_super_upload_vec_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     6,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_UINT32,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_collect_vec_ipaddr_cstr(const UINT32 super_md_id, CVECTOR *ipaddr_cstr_vec) -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_collect_vec_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_collect_vec_ipaddr_cstr",
/*func index      */     FI_super_collect_vec_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_ping_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *ipaddr_cstr); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_ping_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_ping_ipaddr_cstr",
/*func index      */     FI_super_ping_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_write_fdata(const UINT32 super_md_id, const CSTRING *fname, const UINT32 offset, const CBYTES *cbytes); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_write_fdata,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_write_fdata",
/*func index      */     FI_super_write_fdata,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_read_fdata(const UINT32 super_md_id, const CSTRING *fname, const UINT32 offset, const UINT32 max_len, CBYTES *cbytes); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_read_fdata,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_read_fdata",
/*func index      */     FI_super_read_fdata,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_size_file(const UINT32 super_md_id, const CSTRING *fname, UINT32 *fsize); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_size_file,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_size_file",
/*func index      */     FI_super_size_file,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_open_file(const UINT32 super_md_id, const CSTRING *fname, const UINT32 open_flags); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_open_file,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_open_file",
/*func index      */     FI_super_open_file,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_close_file(const UINT32 super_md_id, const CSTRING *fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_close_file,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_close_file",
/*func index      */     FI_super_close_file,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_start(const UINT32 super_md_id, const CSTRING *src_fname, const UINT32 des_tcid, const CSTRING *des_fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_start",
/*func index      */     FI_super_transfer_start,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_stop(const UINT32 super_md_id, const CSTRING *src_fname, const UINT32 des_tcid, const CSTRING *des_fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_stop,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_stop",
/*func index      */     FI_super_transfer_stop,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer(const UINT32 super_md_id, const CSTRING *src_fname, const UINT32 des_tcid, const CSTRING *des_fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer",
/*func index      */     FI_super_transfer,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *src_fname, const CSTRING *ipaddr_cstr, const CSTRING *des_fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_ipaddr_cstr",
/*func index      */     FI_super_transfer_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_vec_start(const UINT32 super_md_id, const CSTRING *src_fname, const CVECTOR *des_tcid_vec, const CSTRING *des_fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_vec_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_vec_start",
/*func index      */     FI_super_transfer_vec_start,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_vec_stop(const UINT32 super_md_id, const CSTRING *src_fname, const CVECTOR *des_tcid_vec, const CSTRING *des_fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_vec_stop,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_vec_stop",
/*func index      */     FI_super_transfer_vec_stop,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_vec(const UINT32 super_md_id, const CSTRING *src_fname, const CVECTOR *des_tcid_vec, const CSTRING *des_fname, CVECTOR *ret_vec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_vec,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_vec",
/*func index      */     FI_super_transfer_vec,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_transfer_vec_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *src_fname, const CVECTOR *ipaddr_cstr_vec, const CSTRING *des_fname, CVECTOR *ret_vec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_transfer_vec_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_transfer_vec_ipaddr_cstr",
/*func index      */     FI_super_transfer_vec_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,e_dbg_CSTRING_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_backup(const UINT32 super_md_id, const CSTRING *fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_backup,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_backup",
/*func index      */     FI_super_backup,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_progress(const UINT32 super_md_id, const CSTRING *fname, const REAL *progress); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_progress,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_progress",
/*func index      */     FI_super_set_progress,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_REAL_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_get_progress(const UINT32 super_md_id, const CSTRING *fname, REAL *progress); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_progress,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offget*/     0,
/*func name       */     "super_get_progress",
/*func index      */     FI_super_get_progress,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_REAL_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_start_mcast_udp_server(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_start_mcast_udp_server,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offget*/     0,
/*func name       */     "super_start_mcast_udp_server",
/*func index      */     FI_super_start_mcast_udp_server,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_stop_mcast_udp_server(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_stop_mcast_udp_server,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offget*/     0,
/*func name       */     "super_stop_mcast_udp_server",
/*func index      */     FI_super_stop_mcast_udp_server,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_status_mcast_udp_server(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_status_mcast_udp_server,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offget*/     0,
/*func name       */     "super_status_mcast_udp_server",
/*func index      */     FI_super_status_mcast_udp_server,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cancel_task_req(const UINT32 super_md_id, const UINT32 seqno, const UINT32 subseqno, const MOD_NODE *recv_mod_node); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cancel_task_req,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offget*/     0,
/*func name       */     "super_cancel_task_req",
/*func index      */     FI_super_cancel_task_req,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_MOD_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_rmv_file(const UINT32 super_md_id, const CSTRING *fname); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_rmv_file,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_rmv_file",
/*func index      */     FI_super_rmv_file,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_hostname(const UINT32 super_md_id, const CSTRING *hostname_cstr); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_hostname,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_hostname",
/*func index      */     FI_super_set_hostname,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- super_get_hostname(const UINT32 super_md_id, CSTRING *hostname_cstr); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_hostname,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_hostname",
/*func index      */     FI_super_get_hostname,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_hostname_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, const CSTRING *hostname_cstr); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_hostname_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_hostname_ipaddr_cstr",
/*func index      */     FI_super_set_hostname_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- super_get_hostname_ipaddr_cstr(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, CSTRING *hostname_cstr); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_hostname_ipaddr_cstr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_hostname_ipaddr_cstr",
/*func index      */     FI_super_get_hostname_ipaddr_cstr,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_cbtimer_reset(const UINT32 super_md_id, const CSTRING *cbtimer_name, const CSTRING *cmd_line, const UINT32 timeout); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_cbtimer_reset,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_cbtimer_reset",
/*func index      */     FI_super_exec_shell_cbtimer_reset,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_cbtimer_set(const UINT32 super_md_id, const CSTRING *cbtimer_name, const CSTRING *cmd_line, const UINT32 timeout); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_cbtimer_set,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_cbtimer_set",
/*func index      */     FI_super_exec_shell_cbtimer_set,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_cbtimer_unset(const UINT32 super_md_id, const CSTRING *cbtimer_name); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_cbtimer_unset,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_cbtimer_unset",
/*func index      */     FI_super_exec_shell_cbtimer_unset,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_ipaddr_cstr_cbtimer_set(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, const CSTRING *cbtimer_name, const CSTRING *cmd_line, const UINT32 timeout); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_ipaddr_cstr_cbtimer_set,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_ipaddr_cstr_cbtimer_set",
/*func index      */     FI_super_exec_shell_ipaddr_cstr_cbtimer_set,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_exec_shell_ipaddr_cstr_cbtimer_unset(const UINT32 super_md_id, const CSTRING *ipaddr_cstr, const CSTRING *cbtimer_name); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_exec_shell_ipaddr_cstr_cbtimer_unset,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_exec_shell_ipaddr_cstr_cbtimer_unset",
/*func index      */     FI_super_exec_shell_ipaddr_cstr_cbtimer_unset,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_zone_size(const UINT32 super_md_id, const UINT32 obj_zone_size); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_zone_size,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_zone_size",
/*func index      */     FI_super_set_zone_size,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_load_data(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_load_data,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_load_data",
/*func index      */     FI_super_load_data,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_load_data_all(const UINT32 super_md_id, const UINT32 obj_zone_num); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_load_data_all,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_load_data_all",
/*func index      */     FI_super_load_data_all,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_get_data(const UINT32 super_md_id, const UINT32 obj_id, CVECTOR *obj_data); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_data,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_data",
/*func index      */     FI_super_get_data,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_get_data_vec(const UINT32 super_md_id, const CVECTOR *obj_id_vec, CVECTOR *obj_data_vec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_data_vec,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_data_vec",
/*func index      */     FI_super_get_data_vec,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_CVECTOR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_print_data(const UINT32 super_md_id, LOG *log); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_print_data,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_print_data",
/*func index      */     FI_super_print_data,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_print_data_all(const UINT32 super_md_id, const UINT32 obj_zone_num, LOG *log); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_print_data_all,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_print_data_all",
/*func index      */     FI_super_print_data_all,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_print_obj_vec(const UINT32 super_md_id, const CVECTOR *obj_vec, LOG *log) -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_print_obj_vec,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_print_obj_vec",
/*func index      */     FI_super_print_obj_vec,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CVECTOR_ptr,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_breathing_mem,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_breathing_mem",
/*func index      */    FI_super_breathing_mem,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_show_log_level_tab,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_show_log_level_tab",
/*func index      */    FI_super_show_log_level_tab,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */    0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_set_log_level_tab,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_set_log_level_tab",
/*func index      */    FI_super_set_log_level_tab,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */    0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_set_log_level_sector,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_set_log_level_sector",
/*func index      */    FI_super_set_log_level_sector,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */    0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_say_hello,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_say_hello",
/*func index      */    FI_super_say_hello,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */    0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_say_hello_loop,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_say_hello_loop",
/*func index      */    FI_super_say_hello_loop,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */    0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_rotate_log,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_rotate_log",
/*func index      */     FI_super_rotate_log,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_http_request,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_http_request",
/*func index      */     FI_super_http_request,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,E_DIRECT_OUT,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CHTTP_REQ_ptr,e_dbg_CHTTP_STORE_ptr,e_dbg_CHTTP_RSP_ptr,e_dbg_CHTTP_STAT_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cond_wait,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cond_wait",
/*func index      */     FI_super_cond_wait,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cond_wakeup,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cond_wakeup",
/*func index      */     FI_super_cond_wakeup,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_register_cluster,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_register_cluster",
/*func index      */    FI_super_register_cluster,
/*func ret type   */    e_dbg_void,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32 },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_http_store,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_http_store",
/*func index      */    FI_super_http_store,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    7,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_notify,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_notify",
/*func index      */    FI_super_notify,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_unlock_notify,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_unlock_notify",
/*func index      */    FI_super_unlock_notify,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_unlock,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_unlock",
/*func index      */    FI_super_unlock,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    6,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_wait_data,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_wait_data",
/*func index      */    FI_super_wait_data,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    5,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_wait_data_e,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_wait_data_e",
/*func index      */    FI_super_wait_data_e,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    7,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CBYTES_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_renew_header,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_renew_header",
/*func index      */    FI_super_renew_header,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    7,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr, e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_renew_headers,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_renew_headers",
/*func index      */    FI_super_renew_headers,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    7,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRKV_MGR_ptr,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_file_notify,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_file_notify",
/*func index      */    FI_super_file_notify,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    5,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_delete_dir,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_delete_dir",
/*func index      */    FI_super_delete_dir,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    5,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_delete_file,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_delete_file",
/*func index      */    FI_super_delete_file,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    5,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_http_store_after_ddir,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_http_store_after_ddir",
/*func index      */    FI_super_http_store_after_ddir,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    8,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_CSTRING_ptr,e_dbg_CHTTP_STORE_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_set_billing,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_set_billing",
/*func index      */    FI_super_set_billing,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    8,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_UINT32,e_dbg_UINT32, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_http_request_merge,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_http_request_merge",
/*func index      */     FI_super_http_request_merge,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     5,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,E_DIRECT_OUT,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CHTTP_REQ_ptr,e_dbg_CHTTP_STORE_ptr,e_dbg_CHTTP_RSP_ptr,e_dbg_CHTTP_STAT_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_store_after_ddir,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_store_after_ddir",
/*func index      */    FI_super_store_after_ddir,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    6,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN, },
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,e_dbg_CSTRING_ptr,e_dbg_CHTTP_STORE_ptr, },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_connect,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_connect",
/*func index      */     FI_super_connect,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */    MD_SUPER,
/*func logic addr */    (UINT32)super_diag_csocket_cnode,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "super_diag_csocket_cnode",
/*func index      */    FI_super_diag_csocket_cnode,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN, E_DIRECT_IO },
/*func para type  */    {e_dbg_UINT32, e_dbg_LOG_ptr },
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cond_terminate,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cond_terminate",
/*func index      */     FI_super_cond_terminate,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cond_delete,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cond_delete",
/*func index      */     FI_super_cond_delete,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_resolve_demo,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_resolve_demo",
/*func index      */     FI_super_dns_resolve_demo,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- void super_ngx_reload_so(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_ngx_reload_so,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_ngx_reload_so",
/*func index      */     FI_super_ngx_reload_so,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- void super_ngx_switch_so(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_ngx_switch_so,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_ngx_switch_so",
/*func index      */     FI_super_ngx_switch_so,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- void super_ngx_show_so(const UINT32 super_md_id, LOG *log); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_ngx_show_so,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_ngx_show_so",
/*func index      */     FI_super_ngx_show_so,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_dns_cache_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_cache_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_cache_switch_on",
/*func index      */     FI_super_dns_cache_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_dns_cache_switch_off(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_cache_switch_off,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_cache_switch_off",
/*func index      */     FI_super_dns_cache_switch_off,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_dns_cache_expired_nsec_set(const UINT32 super_md_id, const UINT32 nsec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_cache_expired_nsec_set,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_cache_expired_nsec_set",
/*func index      */     FI_super_dns_cache_expired_nsec_set,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_dns_cache_resolve(const UINT32 super_md_id, const CSTRING *domain, UINT32 *ipv4); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_cache_resolve,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_cache_resolve",
/*func index      */     FI_super_dns_cache_resolve,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_dns_cache_retire(const UINT32 super_md_id, const CSTRING *domain, const UINT32 ipv4); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_cache_retire,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_cache_retire",
/*func index      */     FI_super_dns_cache_retire,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_dns_cache_show(const UINT32 super_md_id, const CSTRING *domain, LOG *log); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_dns_cache_show,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_dns_cache_show",
/*func index      */     FI_super_dns_cache_show,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_get_bgn_slow_down(const UINT32 super_md_id, UINT32 *slow_down_msec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_bgn_slow_down,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_bgn_slow_down",
/*func index      */     FI_super_get_bgn_slow_down,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_get_ngx_slow_down(const UINT32 super_md_id, UINT32 *slow_down_msec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_get_ngx_slow_down,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_get_ngx_slow_down",
/*func index      */     FI_super_get_ngx_slow_down,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_bgn_slow_down(const UINT32 super_md_id, const UINT32 slow_down_msec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_bgn_slow_down,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_bgn_slow_down",
/*func index      */     FI_super_set_bgn_slow_down,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_ngx_slow_down(const UINT32 super_md_id, const UINT32 slow_down_msec); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_ngx_slow_down,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_ngx_slow_down",
/*func index      */     FI_super_set_ngx_slow_down,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_reopen_log,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_reopen_log",
/*func index      */     FI_super_reopen_log,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_ssd_aio_req_max_num(const UINT32 super_md_id, const UINT32 aio_req_max_num); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_ssd_aio_req_max_num,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_ssd_aio_req_max_num",
/*func index      */     FI_super_set_ssd_aio_req_max_num,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_set_sata_aio_req_max_num(const UINT32 super_md_id, const UINT32 aio_req_max_num); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_set_sata_aio_req_max_num,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_set_sata_aio_req_max_num",
/*func index      */     FI_super_set_sata_aio_req_max_num,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cmc_flow_control_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cmc_flow_control_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cmc_flow_control_switch_on",
/*func index      */     FI_super_cmc_flow_control_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cmc_flow_control_switch_off(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cmc_flow_control_switch_off,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cmc_flow_control_switch_off",
/*func index      */     FI_super_cmc_flow_control_switch_off,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cdc_flow_control_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cdc_flow_control_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cdc_flow_control_switch_on",
/*func index      */     FI_super_cdc_flow_control_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cdc_flow_control_switch_off(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cdc_flow_control_switch_off,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cdc_flow_control_switch_off",
/*func index      */     FI_super_cdc_flow_control_switch_off,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cxfs_lru_model_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cxfs_lru_model_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cxfs_lru_model_switch_on",
/*func index      */     FI_super_cxfs_lru_model_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cxfs_fifo_model_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cxfs_fifo_model_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cxfs_fifo_model_switch_on",
/*func index      */     FI_super_cxfs_fifo_model_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cmc_lru_model_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cmc_lru_model_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cmc_lru_model_switch_on",
/*func index      */     FI_super_cmc_lru_model_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cmc_fifo_model_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cmc_fifo_model_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cmc_fifo_model_switch_on",
/*func index      */     FI_super_cmc_fifo_model_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cdc_lru_model_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cdc_lru_model_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cdc_lru_model_switch_on",
/*func index      */     FI_super_cdc_lru_model_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cdc_fifo_model_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cdc_fifo_model_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cdc_fifo_model_switch_on",
/*func index      */     FI_super_cdc_fifo_model_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- void super_show_task_cfg(const UINT32 super_md_id, LOG *log); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_show_task_cfg,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_show_task_cfg",
/*func index      */     FI_super_show_task_cfg,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_delete_tasks_worker(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_delete_tasks_worker,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_delete_tasks_worker",
/*func index      */     FI_super_delete_tasks_worker,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cxfs_camd_overhead_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cxfs_camd_overhead_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cxfs_camd_overhead_switch_on",
/*func index      */     FI_super_cxfs_camd_overhead_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cxfs_camd_overhead_switch_off(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cxfs_camd_overhead_switch_off,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cxfs_camd_overhead_switch_off",
/*func index      */     FI_super_cxfs_camd_overhead_switch_off,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_cxfs_camd_discard_ratio_set(const UINT32 super_md_id, const UINT32 ratio); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_cxfs_camd_discard_ratio_set,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_cxfs_camd_discard_ratio_set",
/*func index      */     FI_super_cxfs_camd_discard_ratio_set,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_camd_check_page_used_switch_on(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_camd_check_page_used_switch_on,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_camd_check_page_used_switch_on",
/*func index      */     FI_super_camd_check_page_used_switch_on,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL super_camd_check_page_used_switch_off(const UINT32 super_md_id); -- */
/*func module     */     MD_SUPER,
/*func logic addr */     (UINT32)super_camd_check_page_used_switch_off,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "super_camd_check_page_used_switch_off",
/*func index      */     FI_super_camd_check_page_used_switch_off,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
};

UINT32 g_super_func_addr_list_len = sizeof(g_super_func_addr_list)/sizeof(g_super_func_addr_list[0]);

#endif /*_SUPER_INC*/
