/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@163.com
* QQ: 2796796
*
*******************************************************************************/
#ifndef _FINDEX_INC
#define _FINDEX_INC

#define                FI_tbd_print_module_status  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   0))
#define             FI_tbd_free_module_static_mem  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   1))
#define                              FI_tbd_start  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   2))
#define                                FI_tbd_end  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   3))
#define                        FI_tbd_set_mod_mgr  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   4))
#define                        FI_tbd_get_mod_mgr  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   5))
#define                                FI_tbd_run  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   6))

#define              FI_super_print_module_status  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  0))
#define           FI_super_free_module_static_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  1))
#define                            FI_super_start  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  2))
#define                              FI_super_end  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  3))
#define                   FI_super_sync_taskc_mgr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  4))
#define             FI_super_check_tcid_connected  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  5))
#define                         FI_super_show_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  6))
#define                 FI_super_show_mem_of_type  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  7))
#define                         FI_super_diag_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  8))
#define                 FI_super_diag_mem_of_type  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  9))
#define                        FI_super_clean_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 10))
#define                FI_super_shutdown_taskcomm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 11))
#define                  FI_super_sync_cload_stat  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 12))
#define                    FI_super_sync_taskcomm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 13))
#define         FI_super_sync_taskcomm_from_local  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 14))
#define                    FI_super_ping_taskcomm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 15))
#define                      FI_super_show_queues  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 16))
#define          FI_super_handle_broken_tcid_comm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 17))
#define          FI_super_notify_broken_tcid_comm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 18))
#define              FI_super_notify_broken_route  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 19))
#define                  FI_super_show_thread_num  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 20))
#define                 FI_super_show_route_table  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 21))
#define                   FI_super_show_rank_node  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 22))
#define           FI_super_switch_rank_node_green  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 23))
#define             FI_super_switch_rank_node_red  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 24))
#define                 FI_super_show_work_client  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 25))
#define                     FI_super_show_cstring  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 26))
#define                   FI_super_switch_log_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 27))
#define                    FI_super_switch_log_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 28))
#define                    FI_super_wait_me_ready  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 29))
#define                        FI_super_add_route  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 30))
#define                        FI_super_del_route  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 31))
#define                   FI_super_add_connection  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 32))
#define                        FI_super_run_shell  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 33))
#define                   FI_super_show_rank_load  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 34))
#define                   FI_super_sync_rank_load  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 35))
#define                    FI_super_set_rank_load  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 36))
#define                  FI_super_enable_task_brd  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 37))
#define                 FI_super_disable_task_brd  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 38))
#define                FI_super_heartbeat_on_node  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 39))
#define                FI_super_heartbeat_on_rank  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 40))
#define                    FI_super_heartbeat_all  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 41))
#define                   FI_super_heartbeat_none  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 42))
#define                     FI_super_show_version  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 43))
#define                      FI_super_show_vendor  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 44))
#define                     FI_super_get_wordsize  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 45))
#define                    FI_super_show_wordsize  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 46))
#define                   FI_super_sync_cload_mgr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 47))
#define                         FI_super_download  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 48))
#define                           FI_super_upload  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 49))
#define                       FI_super_exec_shell  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 50))
#define                  FI_super_sync_cload_node  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 51))
#define                 FI_super_activate_sys_cfg  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 52))
#define                     FI_super_show_sys_cfg  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 53))
#define                   FI_super_exec_shell_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 54))
#define         FI_super_exec_shell_vec_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 55))
#define           FI_super_download_vec_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 56))
#define             FI_super_upload_vec_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 57))
#define             FI_super_exec_shell_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 58))
#define               FI_super_download_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 59))
#define                 FI_super_upload_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 60))
#define           FI_super_check_ipaddr_connected  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 61))
#define           FI_super_exec_shell_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 62))
#define       FI_super_exec_shell_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 63))
#define             FI_super_download_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 64))
#define         FI_super_download_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 65))
#define               FI_super_upload_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 66))
#define           FI_super_upload_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 67))
#define          FI_super_collect_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 68))
#define                 FI_super_ping_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 69))
#define                      FI_super_write_fdata  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 70))
#define                       FI_super_read_fdata  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 71))
#define                        FI_super_size_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 72))
#define                        FI_super_open_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 73))
#define                       FI_super_close_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 74))
#define                   FI_super_transfer_start  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 75))
#define                    FI_super_transfer_stop  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 76))
#define                         FI_super_transfer  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 77))
#define             FI_super_transfer_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 78))
#define               FI_super_transfer_vec_start  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 79))
#define                FI_super_transfer_vec_stop  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 80))
#define                     FI_super_transfer_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 81))
#define         FI_super_transfer_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 82))
#define                           FI_super_backup  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 83))
#define                     FI_super_set_progress  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 84))
#define                     FI_super_get_progress  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 85))
#define           FI_super_start_mcast_udp_server  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 86))
#define            FI_super_stop_mcast_udp_server  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 87))
#define          FI_super_status_mcast_udp_server  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 88))
#define                  FI_super_cancel_task_req  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 89))
#define                         FI_super_rmv_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 90))
#define                     FI_super_set_hostname  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 91))
#define                     FI_super_get_hostname  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 92))
#define         FI_super_set_hostname_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 93))
#define         FI_super_get_hostname_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 94))
#define         FI_super_exec_shell_cbtimer_reset  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 95))
#define           FI_super_exec_shell_cbtimer_set  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 96))
#define         FI_super_exec_shell_cbtimer_unset  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 97))
#define FI_super_exec_shell_ipaddr_cstr_cbtimer_set  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 98))
#define FI_super_exec_shell_ipaddr_cstr_cbtimer_unset  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 99))
#define                    FI_super_set_zone_size  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 100))
#define                        FI_super_load_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 101))
#define                    FI_super_load_data_all  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 102))
#define                         FI_super_get_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 103))
#define                     FI_super_get_data_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 104))
#define                       FI_super_print_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 105))
#define                   FI_super_print_data_all  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 106))
#define                    FI_super_print_obj_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 107))
#define                    FI_super_breathing_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 108))
#define               FI_super_show_log_level_tab  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 109))
#define                FI_super_set_log_level_tab  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 110))
#define             FI_super_set_log_level_sector  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 111))
#define                        FI_super_say_hello  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 112))
#define                   FI_super_say_hello_loop  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 113))
#define                       FI_super_rotate_log  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 114))
#define                     FI_super_http_request  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 115))
#define                        FI_super_cond_wait  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 116))
#define                      FI_super_cond_wakeup  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 117))
#define                 FI_super_register_cluster  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 118))
#define                       FI_super_http_store  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 119))
#define                           FI_super_notify  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 120))
#define                    FI_super_unlock_notify  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 121))
#define                           FI_super_unlock  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 122))
#define                        FI_super_wait_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 123))
#define                      FI_super_wait_data_e  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 124))
#define                     FI_super_renew_header  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 125))
#define                    FI_super_renew_headers  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 126))
#define                      FI_super_file_notify  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 127))
#define                       FI_super_delete_dir  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 128))
#define                      FI_super_delete_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 129))
#define            FI_super_http_store_after_ddir  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 130))
#define                      FI_super_set_billing  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 131))
#define               FI_super_http_request_merge  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 132))
#define                 FI_super_store_after_ddir  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 133))
#define                          FI_super_connect  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 134))
#define               FI_super_diag_csocket_cnode  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 135))
#define                   FI_super_cond_terminate  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 136))
#define                      FI_super_cond_delete  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 137))
#define                 FI_super_dns_resolve_demo  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 138))
#define                    FI_super_ngx_reload_so  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 139))
#define                    FI_super_ngx_switch_so  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 140))
#define                      FI_super_ngx_show_so  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 141))
#define              FI_super_dns_cache_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 142))
#define             FI_super_dns_cache_switch_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 143))
#define       FI_super_dns_cache_expired_nsec_set  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 144))
#define                FI_super_dns_cache_resolve  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 145))
#define                 FI_super_dns_cache_retire  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 146))
#define                   FI_super_dns_cache_show  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 147))
#define                FI_super_get_bgn_slow_down  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 148))
#define                FI_super_get_ngx_slow_down  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 149))
#define                FI_super_set_bgn_slow_down  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 150))
#define                FI_super_set_ngx_slow_down  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 151))
#define                       FI_super_reopen_log  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 152))
#define          FI_super_set_ssd_aio_req_max_num  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 153))
#define         FI_super_set_sata_aio_req_max_num  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 154))
#define       FI_super_cmc_flow_control_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 155))
#define      FI_super_cmc_flow_control_switch_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 156))
#define       FI_super_cdc_flow_control_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 157))
#define      FI_super_cdc_flow_control_switch_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 158))
#define         FI_super_cxfs_lru_model_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 159))
#define        FI_super_cxfs_fifo_model_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 160))
#define          FI_super_cmc_lru_model_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 161))
#define         FI_super_cmc_fifo_model_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 162))
#define          FI_super_cdc_lru_model_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 163))
#define         FI_super_cdc_fifo_model_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 164))
#define                    FI_super_show_task_cfg  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 165))
#define              FI_super_delete_tasks_worker  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 166))
#define     FI_super_cxfs_camd_overhead_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 167))
#define    FI_super_cxfs_camd_overhead_switch_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 168))
#define      FI_super_cxfs_camd_discard_ratio_set  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 169))
#define   FI_super_camd_check_page_used_switch_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 170))
#define  FI_super_camd_check_page_used_switch_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 171))

#define           FI_csession_print_module_status  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  0))
#define        FI_csession_free_module_static_mem  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  1))
#define                         FI_csession_start  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  2))
#define                           FI_csession_end  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  3))
#define                          FI_csession_show  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  4))
#define               FI_csession_node_is_expired  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  5))
#define                           FI_csession_add  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  6))
#define                   FI_csession_rmv_by_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  7))
#define                     FI_csession_rmv_by_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  8))
#define                      FI_csession_get_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  9))
#define                        FI_csession_get_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 10))
#define                           FI_csession_set  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 11))
#define                   FI_csession_set_by_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 12))
#define                     FI_csession_set_by_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 13))
#define                           FI_csession_get  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 14))
#define                   FI_csession_get_by_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 15))
#define                     FI_csession_get_by_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 16))
#define             FI_csession_get_by_name_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 17))
#define               FI_csession_get_by_id_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 18))
#define             FI_csession_rmv_by_name_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 19))
#define               FI_csession_rmv_by_id_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 20))
#define                 FI_csession_expire_handle  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 21))

#define                             FI_usr_run_01  ((UINT32) ((MD_CRUN << (WORDSIZE/2)) +  0))
#define                             FI_usr_run_02  ((UINT32) ((MD_CRUN << (WORDSIZE/2)) +  1))

#define               FI_cxfs_print_module_status  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  0))
#define            FI_cxfs_free_module_static_mem  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  1))
#define                             FI_cxfs_start  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  2))
#define                               FI_cxfs_end  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  3))
#define                          FI_cxfs_open_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  4))
#define                         FI_cxfs_close_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  5))
#define                            FI_cxfs_is_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  6))
#define                             FI_cxfs_is_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  7))
#define                     FI_cxfs_is_npp_and_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  8))
#define                        FI_cxfs_create_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) +  9))
#define                         FI_cxfs_find_file  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 10))
#define                           FI_cxfs_is_file  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 11))
#define                             FI_cxfs_write  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 12))
#define                              FI_cxfs_read  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 13))
#define                         FI_cxfs_create_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 14))
#define                           FI_cxfs_open_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 15))
#define                          FI_cxfs_close_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 16))
#define                          FI_cxfs_write_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 17))
#define                           FI_cxfs_read_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 18))
#define                         FI_cxfs_write_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 19))
#define                          FI_cxfs_read_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 20))
#define                             FI_cxfs_qfile  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 21))
#define                         FI_cxfs_flush_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 22))
#define                          FI_cxfs_flush_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 23))
#define                          FI_cxfs_file_num  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 24))
#define                         FI_cxfs_file_size  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 25))
#define                FI_cxfs_check_file_content  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 26))
#define                     FI_cxfs_check_file_is  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 27))
#define                          FI_cxfs_show_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 28))
#define                           FI_cxfs_show_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 29))
#define                  FI_cxfs_show_specific_np  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 30))
#define                             FI_cxfs_mkdir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 31))
#define                        FI_cxfs_update_npp  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 32))
#define                        FI_cxfs_write_e_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 33))
#define                         FI_cxfs_read_e_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 34))
#define                           FI_cxfs_write_e  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 35))
#define                            FI_cxfs_read_e  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 36))
#define                          FI_cxfs_add_disk  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 37))
#define                          FI_cxfs_del_disk  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 38))
#define                        FI_cxfs_mount_disk  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 39))
#define                       FI_cxfs_umount_disk  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 40))
#define                        FI_cxfs_reserve_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 41))
#define                        FI_cxfs_release_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 42))
#define                         FI_cxfs_export_dn  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 43))
#define                              FI_cxfs_qdir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 44))
#define                        FI_cxfs_qlist_path  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 45))
#define                         FI_cxfs_qlist_seg  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 46))
#define                            FI_cxfs_update  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 47))
#define                       FI_cxfs_rename_file  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 48))
#define                        FI_cxfs_rename_dir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 49))
#define                            FI_cxfs_rename  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 50))
#define                           FI_cxfs_recycle  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 51))
#define                       FI_cxfs_delete_file  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 52))
#define                        FI_cxfs_delete_dir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 53))
#define                  FI_cxfs_qlist_path_of_np  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 54))
#define                   FI_cxfs_qlist_seg_of_np  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 55))
#define                       FI_cxfs_file_md5sum  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 56))
#define                         FI_cxfs_set_state  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 57))
#define                         FI_cxfs_get_state  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 58))
#define                          FI_cxfs_is_state  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 59))
#define                          FI_cxfs_find_dir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 60))
#define                       FI_cxfs_file_expire  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 61))
#define                         FI_cxfs_file_lock  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 62))
#define                       FI_cxfs_file_unlock  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 63))
#define                             FI_cxfs_flush  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 64))
#define                            FI_cxfs_retire  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 65))
#define                FI_cxfs_locked_files_print  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 66))
#define                        FI_cxfs_qlist_tree  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 67))
#define                  FI_cxfs_qlist_tree_of_np  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 68))
#define                FI_cxfs_file_unlock_notify  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 69))
#define                         FI_cxfs_file_wait  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 70))
#define                       FI_cxfs_file_wait_e  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 71))
#define                       FI_cxfs_file_notify  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 72))
#define            FI_cxfs_wait_file_owner_wakeup  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 73))
#define                 FI_cxfs_renew_http_header  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 74))
#define                FI_cxfs_renew_http_headers  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 75))
#define                  FI_cxfs_wait_http_header  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 76))
#define                 FI_cxfs_wait_http_headers  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 77))
#define                FI_cxfs_locked_file_retire  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 78))
#define     FI_cxfs_renew_http_headers_with_token  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 79))
#define                 FI_cxfs_update_with_token  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 80))
#define                   FI_cxfs_file_wait_ready  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 81))
#define              FI_cxfs_delete_file_wildcard  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 82))
#define               FI_cxfs_delete_dir_wildcard  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 83))
#define            FI_cxfs_wait_file_owner_cancel  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 84))
#define                    FI_cxfs_file_terminate  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 85))
#define                 FI_cxfs_show_npp_que_list  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 86))
#define                 FI_cxfs_show_npp_del_list  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 87))
#define         FI_cxfs_show_specific_np_que_list  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 88))
#define         FI_cxfs_show_specific_np_del_list  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 89))
#define            FI_cxfs_create_sata_bad_bitmap  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 90))
#define                 FI_cxfs_set_sata_bad_page  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 91))
#define               FI_cxfs_unset_sata_bad_page  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 92))
#define               FI_cxfs_check_sata_bad_page  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 93))
#define               FI_cxfs_show_sata_bad_pages  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 94))
#define                  FI_cxfs_set_ssd_bad_page  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 95))
#define                FI_cxfs_unset_ssd_bad_page  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 96))
#define                FI_cxfs_check_ssd_bad_page  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 97))
#define                FI_cxfs_show_ssd_bad_pages  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 98))
#define                     FI_cxfs_set_read_only  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 99))
#define                   FI_cxfs_unset_read_only  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 100))
#define                      FI_cxfs_is_read_only  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 101))
#define                              FI_cxfs_sync  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 102))
#define                          FI_cxfs_retrieve  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 103))
#define                         FI_cxfs_replay_op  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 104))
#define                            FI_cxfs_pop_op  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 105))
#define                        FI_cxfs_process_op  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 106))
#define                           FI_cxfs_dump_op  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 107))
#define                          FI_cxfs_dump_cfg  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 108))
#define                     FI_cxfs_process_space  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 109))
#define                           FI_cxfs_sync_do  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 110))
#define                           FI_cxfs_reg_ngx  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 111))
#define                  FI_cxfs_wait_files_print  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 112))
#define                      FI_cxfs_activate_ngx  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 113))
#define                    FI_cxfs_deactivate_ngx  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 114))
#define                      FI_cxfs_process_stat  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 115))
#define                  FI_cxfs_wait_file_retire  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 116))
#define                  FI_cxfs_check_space_used  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 117))
#define               FI_cxfs_check_adjacent_used  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 118))
#define                     FI_cxfs_truncate_file  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 119))
#define                           FI_cxfs_reserve  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 120))
#define                     FI_cxfs_fuses_getattr  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 121))
#define                    FI_cxfs_fuses_readlink  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 122))
#define                       FI_cxfs_fuses_mknod  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 123))
#define                       FI_cxfs_fuses_mkdir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 124))
#define                      FI_cxfs_fuses_unlink  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 125))
#define                       FI_cxfs_fuses_rmdir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 126))
#define                     FI_cxfs_fuses_symlink  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 127))
#define                      FI_cxfs_fuses_rename  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 128))
#define                         FI_cxfs_link_file  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 129))
#define                          FI_cxfs_link_dir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 130))
#define                              FI_cxfs_link  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 131))
#define                          FI_cxfs_reallink  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 132))
#define                        FI_cxfs_fuses_link  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 133))
#define                       FI_cxfs_fuses_chmod  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 134))
#define                       FI_cxfs_fuses_chown  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 135))
#define                    FI_cxfs_fuses_truncate  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 136))
#define                       FI_cxfs_fuses_utime  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 137))
#define                        FI_cxfs_fuses_open  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 138))
#define                        FI_cxfs_fuses_read  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 139))
#define                       FI_cxfs_fuses_write  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 140))
#define                      FI_cxfs_fuses_statfs  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 141))
#define                       FI_cxfs_fuses_flush  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 142))
#define                     FI_cxfs_fuses_release  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 143))
#define                       FI_cxfs_fuses_fsync  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 144))
#define                    FI_cxfs_fuses_setxattr  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 145))
#define                    FI_cxfs_fuses_getxattr  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 146))
#define                   FI_cxfs_fuses_listxattr  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 147))
#define                 FI_cxfs_fuses_removexattr  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 148))
#define                      FI_cxfs_fuses_access  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 149))
#define                   FI_cxfs_fuses_ftruncate  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 150))
#define                     FI_cxfs_fuses_utimens  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 151))
#define                   FI_cxfs_fuses_fallocate  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 152))
#define                     FI_cxfs_fuses_readdir  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 153))
#define                      FI_cxfs_fuses_create  ((UINT32) ((MD_CXFS << (WORDSIZE/2)) + 154))

#define               FI_cmon_print_module_status  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  0))
#define            FI_cmon_free_module_static_mem  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  1))
#define                             FI_cmon_start  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  2))
#define                               FI_cmon_end  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  3))
#define                        FI_cmon_node_print  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  4))
#define                          FI_cmon_add_node  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  5))
#define                          FI_cmon_del_node  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  6))
#define                       FI_cmon_set_node_up  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  7))
#define                     FI_cmon_set_node_down  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  8))
#define                     FI_cmon_check_node_up  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  9))
#define                   FI_cmon_get_node_by_pos  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 10))
#define                  FI_cmon_get_node_by_tcid  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 11))
#define                        FI_cmon_list_nodes  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 12))
#define                       FI_cmon_count_nodes  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 13))
#define                  FI_cmon_get_node_by_hash  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 14))
#define                      FI_cmon_add_hot_path  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 15))
#define                      FI_cmon_del_hot_path  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 16))
#define                    FI_cmon_exist_hot_path  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 17))
#define                   FI_cmon_print_hot_paths  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 18))
#define                    FI_cmon_load_hot_paths  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 19))
#define                  FI_cmon_unload_hot_paths  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 20))
#define                            FI_cmon_set_up  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 21))
#define                          FI_cmon_set_down  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 22))
#define                       FI_cmon_print_nodes  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 23))

#define                FI_ctdns_print_module_status  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 0))
#define             FI_ctdns_free_module_static_mem  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 1))
#define                              FI_ctdns_start  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 2))
#define                                FI_ctdns_end  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 3))
#define                           FI_ctdns_open_npp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 4))
#define                          FI_ctdns_close_npp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 5))
#define                         FI_ctdns_create_npp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 6))
#define                        FI_ctdns_exists_tcid  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 7))
#define                     FI_ctdns_exists_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 8))
#define                        FI_ctdns_set_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 9))
#define                     FI_ctdns_set_no_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 10))
#define                                FI_ctdns_set  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 11))
#define                                FI_ctdns_get  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 12))
#define                             FI_ctdns_delete  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 13))
#define                          FI_ctdns_flush_npp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 14))
#define                          FI_ctdns_flush_svp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 15))
#define                           FI_ctdns_tcid_num  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 16))
#define                           FI_ctdns_node_num  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 17))
#define                           FI_ctdns_show_npp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 18))
#define                           FI_ctdns_show_svp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 19))
#define                              FI_ctdns_flush  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 20))
#define                     FI_ctdns_finger_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 21))
#define           FI_ctdns_delete_tcid_from_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 22))
#define       FI_ctdns_delete_tcid_from_all_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 23))
#define          FI_ctdns_reserve_tcid_from_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 24))
#define            FI_ctdns_release_tcid_to_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 25))
#define                        FI_ctdns_config_tcid  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 26))
#define                       FI_ctdns_reserve_tcid  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 27))
#define                       FI_ctdns_release_tcid  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 28))
#define                            FI_ctdns_has_npp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 29))
#define                            FI_ctdns_has_svp  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 30))
#define                               FI_ctdns_ping  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 31))
#define                             FI_ctdns_online  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 32))
#define                             FI_ctdns_detect  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 33))
#define                FI_ctdns_finger_edge_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 34))
#define               FI_ctdns_finger_upper_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 35))
#define                     FI_ctdns_detect_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 36))
#define                        FI_ctdns_detect_loop  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 37))
#define                        FI_ctdns_detect_task  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 38))
#define                           FI_ctdns_set_susv  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 39))
#define                         FI_ctdns_unset_susv  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 40))
#define                      FI_ctdns_unset_service  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 41))
#define                            FI_ctdns_offline  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 42))
#define                FI_ctdns_refresh_local_cache  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 43))
#define               FI_ctdns_refresh_cache_notify  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 44))
#define                      FI_ctdns_refresh_cache  ((UINT32) ((MD_CTDNS << (WORDSIZE/2)) + 45))

#define             FI_cdetectn_print_module_status  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 0))
#define          FI_cdetectn_free_module_static_mem  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 1))
#define                           FI_cdetectn_start  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 2))
#define                             FI_cdetectn_end  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 3))
#define                 FI_cdetectn_show_orig_nodes  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 4))
#define                  FI_cdetectn_show_orig_node  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 5))
#define                     FI_cdetectn_dns_resolve  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 6))
#define                    FI_cdetectn_start_domain  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 7))
#define                     FI_cdetectn_stop_domain  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 8))
#define                         FI_cdetectn_process  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 9))
#define                    FI_cdetectn_process_loop  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 10))
#define                       FI_cdetectn_load_conf  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 11))
#define                 FI_cdetectn_parse_conf_line  ((UINT32) ((MD_CDETECTN << (WORDSIZE/2)) + 12))

#define              FI_cdetect_print_module_status  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 0))
#define           FI_cdetect_free_module_static_mem  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 1))
#define                            FI_cdetect_start  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 2))
#define                              FI_cdetect_end  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 3))
#define                  FI_cdetect_show_orig_nodes  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 4))
#define                   FI_cdetect_show_orig_node  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 5))
#define                      FI_cdetect_dns_resolve  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 6))
#define                     FI_cdetect_start_domain  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 7))
#define                      FI_cdetect_stop_domain  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 8))
#define                          FI_cdetect_process  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 9))
#define                     FI_cdetect_process_loop  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 10))
#define                           FI_cdetect_switch  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 11))
#define                           FI_cdetect_reload  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 12))
#define                           FI_cdetect_choice  ((UINT32) ((MD_CDETECT << (WORDSIZE/2)) + 13))

#define                 FI_cp2p_print_module_status  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 0))
#define              FI_cp2p_free_module_static_mem  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 1))
#define                               FI_cp2p_start  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 2))
#define                                 FI_cp2p_end  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 3))
#define                   FI_cp2p_file_exists_local  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 4))
#define                         FI_cp2p_file_exists  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 5))
#define                    FI_cp2p_file_push_notify  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 6))
#define                   FI_cp2p_file_flush_notify  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 7))
#define                  FI_cp2p_file_report_notify  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 8))
#define                  FI_cp2p_file_delete_notify  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 9))
#define                       FI_cp2p_file_download  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 10))
#define                           FI_cp2p_file_push  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 11))
#define                           FI_cp2p_file_pull  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 12))
#define                         FI_cp2p_file_delete  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 13))
#define                           FI_cp2p_file_dump  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 14))
#define                          FI_cp2p_file_flush  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 15))
#define                         FI_cp2p_file_report  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 16))
#define                           FI_cp2p_file_load  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 17))
#define                         FI_cp2p_file_upload  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 18))
#define                         FI_cp2p_cmd_execute  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 19))
#define                  FI_cp2p_cmd_deliver_notify  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 20))
#define                         FI_cp2p_cmd_deliver  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 21))
#define                       FI_cp2p_online_report  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 22))
#define                FI_cp2p_refresh_cache_notify  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 23))
#define                       FI_cp2p_refresh_cache  ((UINT32) ((MD_CP2P << (WORDSIZE/2)) + 24))

#define                FI_cfile_print_module_status  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 0))
#define             FI_cfile_free_module_static_mem  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 1))
#define                              FI_cfile_start  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 2))
#define                                FI_cfile_end  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 3))
#define                             FI_cfile_exists  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 4))
#define                               FI_cfile_size  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 5))
#define                                FI_cfile_md5  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 6))
#define                               FI_cfile_load  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 7))
#define                             FI_cfile_update  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 8))
#define                             FI_cfile_remove  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 9))
#define                             FI_cfile_rename  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 10))
#define                            FI_cfile_seg_md5  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 11))
#define                           FI_cfile_seg_load  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 12))
#define                         FI_cfile_seg_update  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 13))

#define               FI_ctrans_print_module_status  ((UINT32) ((MD_CTRANS << (WORDSIZE/2)) + 0))
#define            FI_ctrans_free_module_static_mem  ((UINT32) ((MD_CTRANS << (WORDSIZE/2)) + 1))
#define                             FI_ctrans_start  ((UINT32) ((MD_CTRANS << (WORDSIZE/2)) + 2))
#define                               FI_ctrans_end  ((UINT32) ((MD_CTRANS << (WORDSIZE/2)) + 3))
#define                               FI_ctrans_seg  ((UINT32) ((MD_CTRANS << (WORDSIZE/2)) + 4))
#define                              FI_ctrans_file  ((UINT32) ((MD_CTRANS << (WORDSIZE/2)) + 5))

#define                 FI_cnbd_print_module_status  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 0))
#define              FI_cnbd_free_module_static_mem  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 1))
#define                               FI_cnbd_start  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 2))
#define                                 FI_cnbd_end  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 3))
#define                          FI_cnbd_handle_req  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 4))
#define                FI_cnbd_thread_check_running  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 5))
#define                  FI_cnbd_thread_set_running  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 6))
#define                  FI_cnbd_thread_set_stopped  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 7))
#define                 FI_cnbd_thread_check_listen  ((UINT32) ((MD_CNBD << (WORDSIZE/2)) + 8))

#define              FI_cxfsnbd_print_module_status  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 0))
#define           FI_cxfsnbd_free_module_static_mem  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 1))
#define                            FI_cxfsnbd_start  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 2))
#define                              FI_cxfsnbd_end  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 3))
#define                     FI_cxfsnbd_bucket_check  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 4))
#define                    FI_cxfsnbd_bucket_create  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 5))
#define                    FI_cxfsnbd_bucket_launch  ((UINT32) ((MD_CXFSNBD << (WORDSIZE/2)) + 6))

#define             FI_cxfsnbdc_print_module_status  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 0))
#define          FI_cxfsnbdc_free_module_static_mem  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 1))
#define                           FI_cxfsnbdc_start  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 2))
#define                             FI_cxfsnbdc_end  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 3))
#define                    FI_cxfsnbdc_bucket_check  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 4))
#define                   FI_cxfsnbdc_bucket_create  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 5))
#define                   FI_cxfsnbdc_bucket_launch  ((UINT32) ((MD_CXFSNBDC << (WORDSIZE/2)) + 6))

#define                FI_cxfsc_print_module_status  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 0))
#define             FI_cxfsc_free_module_static_mem  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 1))
#define                              FI_cxfsc_start  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 2))
#define                                FI_cxfsc_end  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 3))
#define                            FI_cxfsc_reg_xfs  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 4))
#define                          FI_cxfsc_reg_rnode  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 5))
#define                            FI_cxfsc_is_file  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 6))
#define                          FI_cxfsc_file_size  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 7))
#define                            FI_cxfsc_write_e  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 8))
#define                             FI_cxfsc_read_e  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 9))
#define                        FI_cxfsc_delete_file  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 10))
#define                      FI_cxfsc_truncate_file  ((UINT32) ((MD_CXFSC << (WORDSIZE/2)) + 11))

#define  FI_cunixpacket_agent_print_module_status  ((UINT32) ((MD_CUNIXPACKET << (WORDSIZE/2)) +  0))
#define                FI_cunixpacket_agent_start  ((UINT32) ((MD_CUNIXPACKET << (WORDSIZE/2)) +  1))
#define                  FI_cunixpacket_agent_end  ((UINT32) ((MD_CUNIXPACKET << (WORDSIZE/2)) +  2))
#define       FI_cunixpacket_agent_process_packet  ((UINT32) ((MD_CUNIXPACKET << (WORDSIZE/2)) +  3))
#define              FI_cunixpacket_agent_process  ((UINT32) ((MD_CUNIXPACKET << (WORDSIZE/2)) +  4))

#define             FI_cfuses_print_module_status  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  0))
#define          FI_cfuses_free_module_static_mem  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  1))
#define                           FI_cfuses_start  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  2))
#define                             FI_cfuses_end  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  3))
#define                         FI_cfuses_getattr  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  4))
#define                        FI_cfuses_readlink  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  5))
#define                           FI_cfuses_mknod  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  6))
#define                           FI_cfuses_mkdir  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  7))
#define                          FI_cfuses_unlink  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  8))
#define                           FI_cfuses_rmdir  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) +  9))
#define                         FI_cfuses_symlink  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 10))
#define                          FI_cfuses_rename  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 11))
#define                            FI_cfuses_link  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 12))
#define                           FI_cfuses_chmod  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 13))
#define                           FI_cfuses_chown  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 14))
#define                        FI_cfuses_truncate  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 15))
#define                           FI_cfuses_utime  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 16))
#define                            FI_cfuses_open  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 17))
#define                            FI_cfuses_read  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 18))
#define                           FI_cfuses_write  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 19))
#define                          FI_cfuses_statfs  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 20))
#define                           FI_cfuses_flush  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 21))
#define                         FI_cfuses_release  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 22))
#define                           FI_cfuses_fsync  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 23))
#define                        FI_cfuses_setxattr  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 24))
#define                        FI_cfuses_getxattr  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 25))
#define                       FI_cfuses_listxattr  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 26))
#define                     FI_cfuses_removexattr  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 27))
#define                          FI_cfuses_access  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 28))
#define                       FI_cfuses_ftruncate  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 29))
#define                         FI_cfuses_utimens  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 30))
#define                       FI_cfuses_fallocate  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 31))
#define                         FI_cfuses_readdir  ((UINT32) ((MD_CFUSES << (WORDSIZE/2)) + 32))

#endif/* _FINDEX_INC */

